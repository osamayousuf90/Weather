{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Linki\\\\Desktop\\\\Osama\\\\Weather\\\\Weather-App\\\\src\\\\components\\\\Weather\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { api } from \"../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Weather = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n\n  const search = e => {\n    fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n      setWeather(result);\n      setQuery(\"\");\n      console.log(result);\n    });\n  };\n\n  const checkBtn = () => {\n    if (e.key == \"Enter\") {}\n  };\n\n  const dataBuilder = d => {\n    const months = [\"Janauary\", \"Febuary\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Get World Weather Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Get Weather \", /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa-solid fa-cloud\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: typeof weather.main != \"undefined\" ? weather.main.temp < 20 ? \"weather\" : \"weather_hot\" : \"weather_normal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"\",\n            id: \"\",\n            placeholder: \"Search Weather...\",\n            className: typeof weather.main != \"undefined\" ? weather.main.temp < 20 ? \"input-field\" : \"input-field_hot\" : \"input-field-normal\",\n            onChange: e => setQuery(e.target.value),\n            value: query,\n            onKeyDown: checkBtn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => search(),\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: typeof weather.main == \"undefined\" ? \"weather_normal_text\" : \"weather_normal_text_nobody\",\n            children: \"Search Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location_box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"location\",\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: [weather.name, \", \", weather.sys.country]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: dataBuilder(new Date())\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather_box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weather_w_s\",\n                children: weather.weather[0].main\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"temp\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [weather.main.temp, \"\\xB0C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: typeof weather.main != \"undefined\" ? weather.main.temp < 20 ? \"little_details\" : \"little_details_hot\" : \"little_details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Feels Like : \", weather.main.feels_like]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Air Pressure : \", weather.wind.speed]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Weather, \"aUmLB7MmU9hFgZv3g9V+araxS3g=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","api","Weather","query","setQuery","weather","setWeather","search","e","fetch","base","key","then","res","json","result","console","log","checkBtn","dataBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","target","value","name","sys","country","Date","feels_like","wind","speed"],"sources":["C:/Users/Linki/Desktop/Osama/Weather/Weather-App/src/components/Weather/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { api } from \"../../App\";\r\n\r\nconst Weather = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState(\"\");\r\n\r\n  const search = (e) => {\r\n\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setWeather(result);\r\n          setQuery(\"\");\r\n          console.log(result);\r\n        });\r\n  };\r\n\r\n   \r\n  const checkBtn = () => {\r\n    if (e.key == \"Enter\") {\r\n    \r\n    } \r\n   }\r\n   \r\n  \r\n  const dataBuilder = (d) => {\r\n    const months = [\r\n      \"Janauary\",\r\n      \"Febuary\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    const days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-weather\">\r\n        <div className=\"weather-1\">\r\n          <p>Get World Weather Update</p>\r\n          <h2>\r\n            Get Weather <i class=\"fa-solid fa-cloud\"></i>\r\n          </h2>\r\n        </div>\r\n\r\n        <div\r\n          className={\r\n            typeof weather.main != \"undefined\"\r\n              ? weather.main.temp < 20\r\n                ? \"weather\"\r\n                : \"weather_hot\"\r\n              : \"weather_normal\"\r\n          }\r\n        >\r\n          <div className=\"column\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"\"\r\n              id=\"\"\r\n              placeholder=\"Search Weather...\"\r\n              className={\r\n                typeof weather.main != \"undefined\"\r\n                  ? weather.main.temp < 20\r\n                    ? \"input-field\"\r\n                    : \"input-field_hot\"\r\n                  : \"input-field-normal\"\r\n              }\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              value={query}\r\n              onKeyDown={checkBtn}\r\n            />\r\n            <button onClick={() => search()}>Search</button>\r\n            <div className={(typeof weather.main == \"undefined\") ? \"weather_normal_text\" : \"weather_normal_text_nobody\"}>Search Here</div>\r\n\r\n            {typeof weather.main != \"undefined\" ? (\r\n              <>\r\n                <div className=\"location_box\">\r\n                  <div className=\"location\">\r\n                    <h1>\r\n                      {weather.name}, {weather.sys.country}\r\n                    </h1>\r\n                  </div>\r\n                  <div className=\"date\">\r\n                    <h4>{dataBuilder(new Date())}</h4>\r\n                  </div>\r\n                </div>\r\n                <div className=\"weather_box\">\r\n                  <div className=\"weather_w_s\">{weather.weather[0].main}</div>\r\n                  <div className=\"temp\">\r\n                    <p>{weather.main.temp}°C</p>\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      typeof weather.main != \"undefined\"\r\n                        ? weather.main.temp < 20\r\n                          ? \"little_details\"\r\n                          : \"little_details_hot\"\r\n                        : \"little_details\"\r\n                    }\r\n                  >\r\n                    <h3>Feels Like : {weather.main.feels_like}</h3>\r\n                    <h3>Air Pressure : {weather.wind.speed}</h3>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}